# A cloud-based tiling service for the Jiiify Tile Server

service: ${file(config.yml):name}

provider:
  name: aws
  runtime: java8
  stage: ${file(config.yml):provider.stage}
  region: ${file(config.yml):provider.region}
  profile: ${file(config.yml):provider.profile}
  memorySize: ${file(config.yml):provider.memory}
  timeout: ${file(config.yml):provider.timeout}
  stackTags:
    IIIF_PREFIX: ${file(config.yml):jiiify.prefix}
    TILE_BUCKET: ${file(config.yml):s3.outputBucket}
    JIIIFY_OUTPUT: ${file(config.yml):jiiify.output}
    JIIIFY_SERVER: ${file(config.yml):jiiify.server}
    TILE_SIZE: ${file(config.yml):jiiify.tileSize}
    TILE_ACL: ${file(config.yml):jiiify.tileACL}
    THUMBNAIL_SIZES: ${file(config.yml):jiiify.thumbnailSizes}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - "s3:*"
      Resource:
        # TODO: Would be nice to be able to use an autogenerated deploy bucket OR a pre-configured one
        - { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ]]}
        # Bucket permission needed to be able to access configuration tags
        - { "Fn::Join" : ["", ["arn:aws:s3:::", "${file(config.yml):s3.sourceBucket}" ]]}
        - { "Fn::Join" : ["", ["arn:aws:s3:::", "${file(config.yml):s3.outputBucket}" ]]}
        # The next two are permissions to access the contents of the buckets
        - { "Fn::Join" : ["", ["arn:aws:s3:::", "${file(config.yml):s3.sourceBucket}", "/*" ]]}
        - { "Fn::Join" : ["", ["arn:aws:s3:::", "${file(config.yml):s3.outputBucket}", "/*" ]]}

package:
  artifact: target/${self:service}-${self:provider.stage}.jar
  exclude:
    - .serverless
    - .gitignore
    - README.md
    - serverless.yml
    - config-sample.yml

functions:
  tiler:
    description: A tiler for images dropped in S3
    handler: info.freelibrary.jiiify.lambda.VertxHandler
    events:
      - http:
          path: /iiif
          method: get
          cors: true
      - s3:
          bucket: ${file(config.yml):s3.sourceBucket}
          event: s3:ObjectCreated:*
          rules:
            - suffix: ${file(config.yml):s3.sourceSuffix}
